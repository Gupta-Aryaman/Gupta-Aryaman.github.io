<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo ʕ•ᴥ•ʔ Bear on aryaman&#39;s batcave</title>
    <link>https://aryaman.github.io/</link>
    <description>Recent content in Hugo ʕ•ᴥ•ʔ Bear on aryaman&#39;s batcave</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2024, Aryaman Gupta.</copyright>
    <lastBuildDate>Wed, 31 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://aryaman.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Decorators in Python</title>
      <link>https://aryaman.github.io/decorators-in-python/</link>
      <pubDate>Wed, 31 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://aryaman.github.io/decorators-in-python/</guid>
      <description>What on earth are decorators??? Decorators are essentially single reusable functions that take a &amp;ldquo;function&amp;rdquo; as input and return a modified version of it. Decorators are just a bit different from regular functions because they wrap the &amp;ldquo;input function&amp;rdquo; to extend its functionality without modifying it.
What does wrapping mean?
import time start_time = time.time() **call your function** #calling your function end_time = time.time() print(&amp;#34;Time Taken = &amp;#34;, end_time-start_time) Here you can see that your function call is being &amp;ldquo;wrapped&amp;rdquo; between lines of code.</description>
    </item>
    
    <item>
      <title>Bear</title>
      <link>https://aryaman.github.io/bear/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aryaman.github.io/bear/</guid>
      <description>Bear Website: https://bearblog.dev
There is a website obesity crisis. Bloated websites are full of scripts, ads, and trackers slowing your readers down every time they try to read your well-crafted content.
Bear is all you need to build a fantastic and optimized site or blog. It works perfectly on any viewing device. All you need to focus on is writing good content.
Bear makes it simple to publish content online and grow an audience while keeping pages tiny, fast, and optimized for search engines.</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://aryaman.github.io/hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aryaman.github.io/hugo/</guid>
      <description>Hugo Website: https://gohugo.io
Written in Go, Hugo is an open-source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML, and JSON data file types, Markdown and HTML content files, and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification, and support for Sass SCSS workflows.
Hugo makes use of a variety of open source projects including:</description>
    </item>
    
  </channel>
</rss>
